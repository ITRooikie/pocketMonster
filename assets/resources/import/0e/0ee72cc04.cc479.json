[1,["9bCa6IBM9IWLuAFXNi1/xr"],["_effectAsset"],[["cc.Material",["_name","_techniqueData"],2,11],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2],[1,0,1,2,4]],[[[[0,"corn-round",[{},"0",11,[{"defines":{}},"props",11,[{},"leftTop",8,[0,50,50],"size",8,[0,300,300],"rightTop",8,[0,50,50],"rightBottom",8,[0,50,50],"leftBottom",8,[0,50,50]]]]]],0,0,[0],[0],[0]],[[[1,"avatar-corn-round",[{"hash":293478542,"record":null,"name":"avatar-corn-round|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nin vec4 a_color;\nout vec2 v_uv0;\nout vec4 v_color;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n  v_color = a_color;\n}","frag":"\nprecision highp float;\nin vec2 v_uv0;\nin vec4 v_color;\n#if USE_TEXTURE\n  uniform sampler2D texture;\n#endif\nuniform Properties {\n  vec2 size;\n  vec2 leftTop;\n  vec2 rightTop;\n  vec2 rightBottom;\n  vec2 leftBottom;\n};\nfloat inEllipse(vec2 origin, float radius_a, float radius_b, vec2 coordinate) {\n  coordinate.x -= origin.x;\n  coordinate.y -= origin.y;\n  return pow(coordinate.x, 2.0) / pow(radius_a, 2.0) + pow(coordinate.y, 2.0) / pow(radius_b, 2.0);\n}\nvoid main () {\n  vec4 color = v_color;\n  color *= texture(texture, v_uv0);\n  vec2 uv = vec2(v_uv0.x, 1.0 - v_uv0.y);\n  uv.xy *= size.xy;\n  if(uv.x < leftTop.x && uv.y > size.y - leftTop.y) {\n    if(inEllipse(vec2(leftTop.x, size.y - leftTop.y), leftTop.x, leftTop.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  if(uv.x > size.x - rightTop.x && uv.y > size.y - rightTop.y) {\n    if(inEllipse(vec2(size.x - rightTop.x, size.y - rightTop.y), rightTop.x, rightTop.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  if(uv.x > size.x - rightBottom.x && uv.y < rightBottom.y) {\n    if(inEllipse(vec2(size.x - rightBottom.x, rightBottom.y), rightBottom.x, rightBottom.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  if(uv.x < leftBottom.x && uv.y < leftBottom.y) {\n    if(inEllipse(vec2(leftBottom.x, leftBottom.y), leftBottom.x, leftBottom.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  color.a *= v_color.a;\n  gl_FragColor = color;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nattribute vec4 a_color;\nvarying vec2 v_uv0;\nvarying vec4 v_color;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n  v_color = a_color;\n}","frag":"\nprecision highp float;\nvarying vec2 v_uv0;\nvarying vec4 v_color;\n#if USE_TEXTURE\n  uniform sampler2D texture;\n#endif\nuniform vec2 size;\nuniform vec2 leftTop;\nuniform vec2 rightTop;\nuniform vec2 rightBottom;\nuniform vec2 leftBottom;\nfloat inEllipse(vec2 origin, float radius_a, float radius_b, vec2 coordinate) {\n  coordinate.x -= origin.x;\n  coordinate.y -= origin.y;\n  return pow(coordinate.x, 2.0) / pow(radius_a, 2.0) + pow(coordinate.y, 2.0) / pow(radius_b, 2.0);\n}\nvoid main () {\n  vec4 color = v_color;\n  color *= texture2D(texture, v_uv0);\n  vec2 uv = vec2(v_uv0.x, 1.0 - v_uv0.y);\n  uv.xy *= size.xy;\n  if(uv.x < leftTop.x && uv.y > size.y - leftTop.y) {\n    if(inEllipse(vec2(leftTop.x, size.y - leftTop.y), leftTop.x, leftTop.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  if(uv.x > size.x - rightTop.x && uv.y > size.y - rightTop.y) {\n    if(inEllipse(vec2(size.x - rightTop.x, size.y - rightTop.y), rightTop.x, rightTop.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  if(uv.x > size.x - rightBottom.x && uv.y < rightBottom.y) {\n    if(inEllipse(vec2(size.x - rightBottom.x, rightBottom.y), rightBottom.x, rightBottom.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  if(uv.x < leftBottom.x && uv.y < leftBottom.y) {\n    if(inEllipse(vec2(leftBottom.x, leftBottom.y), leftBottom.x, leftBottom.y, uv) > 1.0) {\n      color.a = 0.0;\n    };\n  }\n  color.a *= v_color.a;\n  gl_FragColor = color;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]}],"blocks":[{"name":"Properties","binding":0,"members":[{"name":"size","type":14,"count":1},{"name":"leftTop","type":14,"count":1},{"name":"rightTop","type":14,"count":1},{"name":"rightBottom","type":14,"count":1},{"name":"leftBottom","type":14,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"avatar-corn-round|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"size":{"type":14,"value":[0,0],"editor":{"tooltip":"图片尺寸"}},"leftTop":{"type":14,"value":[0,0],"editor":{"tooltip":"左上角，第一个数为水平方向"}},"rightTop":{"type":14,"value":[0,0],"editor":{"tooltip":"右上角，第一个数为水平方向"}},"rightBottom":{"type":14,"value":[0,0],"editor":{"tooltip":"右下角，第一个数为水平方向"}},"leftBottom":{"type":14,"value":[0,0],"editor":{"tooltip":"左下角，第一个数为水平方向"}}}}]}]]],0,0,[],[],[]]]]