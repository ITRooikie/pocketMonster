{"version":3,"sources":["assets/Script/AudioManager.ts","assets/Script/components/BaseButton.ts","assets/Script/components/BasePopup.ts","assets/Script/ContactCtr.ts","assets/Script/core/EventManager.ts","assets/Script/GameRun.ts","assets/Script/Global.ts","assets/Script/HallCtr.ts","assets/Script/components/Localization/LocalizationBase.ts","assets/Script/components/Localization/LocalizationLabelString.ts","assets/Script/components/Localization/LocalizationSpriteFrame.ts","assets/Script/StartCtr.ts","assets/Script/components/Switch.ts","assets/Script/components/antiAlias.ts","assets/Script/utils/dateUtils.ts","assets/Script/utils/getQuery.ts","assets/Script/popups/menuPopup.ts","assets/Script/utils/nanoid.js","assets/Script/utils/numberFormat.ts","assets/ppTools/ppPlatformMgr.ts","assets/Script/utils/shuffle.ts"],"names":["_a","cc","_decorator","ccclass","property","menu","Audio","this","name","audioClip","__decorate","prototype","type","AudioClip","audioNames","exports","BGM","hall","slot","whot","AudioManager","_super","_this","apply","arguments","nowBgm","bgmPlaying","bgm","bgmVolume","audioClips","__extends","AudioManager_1","loadBgm","url","Promise","resolve","loader","load","err","clip","instance","onLoad","playBgm","_playBgm","getAudioClipByName","find","audio","stopBgm","_stopAudio","resumeBgm","_resumeAudio","pauseBgm","_pauseAudio","stop","play","volume","_playAudio","src","audioIdsTimeouts","Date","now","audioIds","audioEngine","getState","AudioState","PLAYING","resume","pause","Component","default","require","Global_1","BaseButton","withAudio","withAnimation","scale","nodeScale","clickEvents","node","addComponent","Button","on","Node","EventType","TOUCH_END","AudioCtr","button","tween","to","start","tooltip","BasePopup","closeOnBlur","isFade","hideToDir","originPosition","getChildByName","position","_b","_c","hideTo","scaleHide","scaleShow","active","opacity","easing","call","afterHide","zoomHide","showFrom","e","dir","pos","width","height","v3","fadeShow","fadeHide","show","hide","GameRun_1","BasePopup_1","ContactCtr","gameRun","onBeginContact","contact","selfCollider","console","log","isFloor","isGaming","gameOver","getComponent","EventManager","callback","target","events","has","get","push","set","once","onceEvents","off","event","i","l","length","compare","splice","delete","onceEvent","emit","args","_i","remove","removeAll","clear","subscription","inCallback","inTarget","toString","Map","GameRun","pet","pointer","trees","roads","groundSpeed","distanceLabel","distanceNum","vSpeed","petOriginPostion","director","getPhysicsManager","enabled","getCollisionManager","TOUCH_START","onClick","RigidBody","linearVelocity","v2","update","dt","Math","floor","string","forEach","road","index","x","y","random","tree","reset","Label","Global","global","configs","bgmStatus","soundStatus","BGMInit","BGMSwitch","SoundSwitch","showMsg","HallCtr","audioManager","petNode","petWalk","scaleX","union","repeatForever","moveTo","goHall","loadScene","Lang","DefaultLang","EventManager_1","LANG_CHANGED","LocalizationBase","defaultLang","cn","curLang","Cn","langChanged","lang","Eng","onLangChanged","onDestroy","Array","isArray","Enum","CC_DEV","LocalizationBase_1","requireComponent","LocalizationLabelString","eng","label","LocalizationSpriteFrame","sprite","Sprite","spriteFrame","SpriteFrame","StartCtr","Switch","status","Switch_1","children","color","Color","onSwitch","fn","macro","ENABLE_WEBGL_ANTIALIAS","dateFormat","date","fmt","ret","opt","Y+","getFullYear","M+","getMonth","D+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","k","RegExp","exec","replace","padStart","countDown","format","callBack","parseTimeData","time","DD","hh","mm","ss","countDownStr","timer","timeDiff","getTime","setInterval","clearInterval","menuPopup","huntingSwitch","onHuntingSwitch","_default","nanoid","size","id","module","n","result","counter","num","split","unshift","join","NetWorkType","ppPlatformMgr","removeLaunch","sys","isNative","PlatformUtils","getInstance","getMacAddress","getAppVersion","getAppCode","getIMEI","getIMSI","getSimSerialNumber","getSystemId","getPhoneModel","platform","WECHAT_GAME","wx","getSystemInfoSync","model","BYTEDANCE_GAME","tt","getPhoneBrand","brand","getPhoneNum","getSystemVersion","openBrowser","openApp","pkgName","isAppInstalled","setClipboardData","content","data","getClipboardData","openSetting","shake","vibrateShort","getBattery","getNetworkType","NetWorkType_Unknow","setScreenBright","nBright","setScreenBrightness","value","getScreenBright","setKeepScreenOn","bKeep","keepScreenOn","nativeFloor","nativeRandom","array","undefined","lower","upper","lastIndex","rand"],"mappings":"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","sourcesContent":["const { ccclass, property, menu } = cc._decorator\r\n\r\n@ccclass('Audio')\r\nclass Audio {\r\n  /** 音效name  */\r\n  @property()\r\n  name = ''\r\n  @property({\r\n    'type': cc.AudioClip\r\n  })\r\n  audioClip: cc.AudioClip = null\r\n}\r\n\r\ninterface AudioIds {\r\n  [proname: string]: number\r\n}\r\n\r\nexport enum audioNames {\r\n  /** 发牌  */\r\n  distribute = 'distribute',\r\n  /** 按钮  */\r\n  button = 'button',\r\n  /** 中大奖  */\r\n  bigWin = 'bigwin',\r\n  /** 抽奖  */\r\n  gameDraw = 'gamedraw'\r\n}\r\n\r\n/** 背景音乐  */\r\nexport const BGM = {\r\n  hall: 'http://39.129.23.143:20081/wq/files/2023/09/21/650bcdfe592ba.mp3',\r\n  slot: 'http://39.129.23.143:20081/wq/files/2023/09/21/650bcd53f1cf6.mp3',\r\n  whot: 'http://39.129.23.143:20081/wq/files/2023/09/21/650bcdc9a3540.mp3'\r\n}\r\n\r\n@ccclass\r\n@menu('通用组件/音频管理器')\r\nexport default class AudioManager extends cc.Component {\r\n  nowBgm: cc.AudioClip = null\r\n  bgmPlaying = false\r\n\r\n  static instance: AudioManager = null\r\n\r\n  @property({\r\n    'type': cc.AudioClip\r\n  })\r\n  bgm: cc.AudioClip = null\r\n\r\n  @property()\r\n  bgmVolume = .2\r\n\r\n  @property({\r\n    'type': [Audio]\r\n  })\r\n  /** 游戏相关音效  */\r\n  audioClips: Audio[] = []\r\n  \r\n  private static audioIds: AudioIds = {}\r\n  private static audioIdsTimeouts: AudioIds = {}\r\n\r\n  /**\r\n   * 加载音乐\r\n   */\r\n  public loadBgm(url): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      cc.loader.load(url, (err, clip: cc.AudioClip) => {\r\n          // cc.log(clip)\r\n          // AudioManager.instance.bgm = clip\r\n          AudioManager.instance.nowBgm = clip\r\n          resolve(clip)\r\n      })\r\n    })\r\n  }\r\n\r\n  onLoad() {\r\n    AudioManager.instance = this\r\n    // cc.game.addPersistRootNode(this.node)\r\n  }\r\n\r\n  /**\r\n   * 播放指定的bgm或者默认bgm(同一个bgm重复调用并不会重复播放)\r\n   */\r\n  public playBgm() {\r\n    if (!AudioManager.instance.nowBgm) return\r\n    // AudioManager._playBgm(AudioManager.instance.bgm , AudioManager.instance.bgmVolume)\r\n    AudioManager._playBgm(AudioManager.instance.nowBgm, .2)\r\n  }\r\n\r\n  static getAudioClipByName(name: string): cc.AudioClip {\r\n    return AudioManager.instance.audioClips.find((audio) => audio.name === name)?.audioClip\r\n  }\r\n\r\n\r\n  /**\r\n   * 停止播放当前bgm\r\n   * @param name\r\n   */\r\n  public stopBgm(): void {\r\n    AudioManager._stopAudio(AudioManager.instance.nowBgm)\r\n  }\r\n\r\n  /**\r\n   * 恢复播放当前的bgm\r\n   */\r\n  public resumeBgm(): void {\r\n    AudioManager._resumeAudio(AudioManager.instance.nowBgm)\r\n  }\r\n\r\n  /**\r\n   * 暂停播放当前的bgm\r\n   */\r\n  public pauseBgm(): void {\r\n    AudioManager._pauseAudio(AudioManager.instance.nowBgm)\r\n  }\r\n\r\n  /**\r\n   * 停止播放一个指定的音效\r\n   * @param name\r\n   */\r\n  public stop(name: string): void {\r\n    AudioManager._stopAudio(AudioManager.getAudioClipByName(name))\r\n  }\r\n\r\n  /**\r\n   * 播放一个指定的音效\r\n   * @param name\r\n   */\r\n  public play(name: string, volume = .5): void {\r\n    AudioManager._playAudio(AudioManager.getAudioClipByName(name), volume)\r\n  }\r\n\r\n  /**\r\n   * 播放一个指定路径的音效\r\n   * @param src\r\n   * @param volume\r\n   */\r\n  private static _playAudio(src: any, volume = 1): void {\r\n    if (!src) {\r\n      return\r\n    }\r\n    // (防抖动)33毫秒内只播放一次相同的音频\r\n    if (src in AudioManager.audioIdsTimeouts && AudioManager.audioIdsTimeouts[src] + 33 > Date.now()) {\r\n      return\r\n    }\r\n    AudioManager.audioIdsTimeouts[src] = Date.now()\r\n    AudioManager.audioIds[src] = cc.audioEngine.play(src, false, volume)\r\n  }\r\n\r\n  /**\r\n   * 播放一个指定路径的bgm\r\n   * @param src\r\n   * @param volume\r\n   */\r\n  private static _playBgm(src: any, volume = 1): void {\r\n    if (!src) {\r\n      return\r\n    }\r\n    if (src in AudioManager.audioIds) {\r\n      if (cc.audioEngine.getState(AudioManager.audioIds[src]) !== cc.audioEngine.AudioState.PLAYING) {\r\n        cc.audioEngine.resume(AudioManager.audioIds[src])\r\n      }\r\n      return\r\n    }\r\n    AudioManager.audioIds[src] = cc.audioEngine.play(src, true, volume)\r\n  }\r\n\r\n  /**\r\n   * 恢复一个指定路径的音效\r\n   * @param src\r\n   */\r\n  private static _resumeAudio(src: any): void {\r\n    if (!src) {\r\n      return\r\n    }\r\n\r\n    if (src in AudioManager.audioIds) {\r\n      cc.audioEngine.resume(AudioManager.audioIds[src])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 暂停一个指定路径的音效\r\n   * @param src\r\n   */\r\n  private static _pauseAudio(src: any): void {\r\n    if (!src) {\r\n      return\r\n    }\r\n    if (src in AudioManager.audioIds) {\r\n      cc.audioEngine.pause(AudioManager.audioIds[src])\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 停止一个指定路径的音效\r\n   * @param src\r\n   */\r\n  private static _stopAudio(src: any): void {\r\n    if (!src) {\r\n      return\r\n    }\r\n    if (src in AudioManager.audioIds) {\r\n      cc.audioEngine.stop(AudioManager.audioIds[src])\r\n      delete AudioManager.audioIds[src]\r\n      // audioIds[src] = null\r\n    }\r\n  }\r\n\r\n  // onLoad() {\r\n  //     cc.game.addPersistRootNode(this.node)\r\n  // }\r\n}\r\n","import AudioManager, { audioNames} from \"../AudioManager\";\r\nimport Global from \"../Global\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseButton extends cc.Component {\r\n  @property({ tooltip: '是否有按钮声' })\r\n  withAudio: boolean = true\r\n\r\n  @property({ tooltip: '是否有按钮动效' })\r\n  withAnimation: boolean = true\r\n\r\n  @property({ tooltip: '缩放比例' })\r\n  scale: number = 1.1\r\n\r\n  nodeScale = 1\r\n\r\n  @property()\r\n  clickEvents: cc.Component.EventHandler[] = []\r\n\r\n  onLoad() {\r\n    let btn = this.node.addComponent(cc.Button)\r\n    btn.clickEvents = this.clickEvents\r\n    this.nodeScale = this.node.scale\r\n    this.node.on(cc.Node.EventType.TOUCH_END, () => {\r\n      // if (this.withAudio && Global.configs.soundStatus) \r\n      Global.AudioCtr.play(audioNames.button)\r\n      if (this.node.scale !== this.nodeScale) return\r\n      if (this.withAnimation) {\r\n        cc.tween(this.node)\r\n        .to(.1, { scale: this.node.scale * this.scale })\r\n        .to(.1, { scale: this.node.scale * 1 })\r\n        .start()\r\n      }\r\n    }, this)\r\n  }\r\n}\r\n","/**\r\n *  BasePopup.ts绑定到具体的弹窗组件\r\n *  不能绑定到BasePopup.prefab\r\n */\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BasePopup extends cc.Component {\r\n  @property({ tooltip: '是否点击蒙层关闭' })\r\n  private closeOnBlur: boolean = false\r\n\r\n  @property({ tooltip: '是否有淡入淡出效果' })\r\n  private isFade: boolean = true\r\n\r\n  @property({ tooltip: `关闭popup的方向  left | right | top | bottom` })\r\n  hideToDir = ''\r\n\r\n  /** 原始位置  */\r\n  private originPosition: cc.Vec3 = null\r\n\r\n  onLoad() {\r\n    this.originPosition = this.node.getChildByName('content')?.position\r\n    if (this.closeOnBlur) {\r\n      this.node.getChildByName('content')?.on(cc.Node.EventType.TOUCH_END, (e) => {}, this)\r\n      this.node.getChildByName('mask')?.on(cc.Node.EventType.TOUCH_END, (e) => {\r\n        if (this.hideToDir) {\r\n          this.hideTo(null, this.hideToDir)\r\n        } else {\r\n          this.scaleHide()\r\n        }\r\n      }, this)\r\n    }\r\n  }\r\n\r\n  /** 打开Popup  */\r\n  public scaleShow() {\r\n    if (this.node.active) return\r\n    this.node.active = true\r\n    this.node.scale = 0.5\r\n    this.node.opacity = 0\r\n    cc.tween(this.node)\r\n      .to(.2, { scale: 1.08, opacity: 255 }, { easing: 'smooth'})\r\n      .to(.05, { scale: 1, opacity: 255 }, { easing: 'smooth'})\r\n      .start()\r\n  }\r\n\r\n  /** 关闭Popup  */\r\n  public scaleHide() {\r\n    cc.tween(this.node)\r\n      .to(.05, { scale: 1.08, opacity: 255 }, { easing: 'smooth'})\r\n      .to(.2, { scale: .8, opacity: 0 }, { easing: 'smooth'})\r\n      .call(() => {\r\n        this.node.active = false\r\n        this.node.scale = 1\r\n        this.afterHide()\r\n      })\r\n      .start()\r\n  }\r\n\r\n  /** 放大关闭Popup  */\r\n  public zoomHide() {\r\n    cc.tween(this.node)\r\n      .to(.05, { scale: .92, opacity: 255 }, { easing: 'smooth'})\r\n      .to(.2, { scale: 1.8, opacity: 0 }, { easing: 'smooth'})\r\n      .call(() => {\r\n        this.node.active = false\r\n        this.node.scale = 1\r\n        this.afterHide()\r\n      })\r\n      .start()\r\n  }\r\n\r\n  /** 从指定方向打开popup  */\r\n  public showFrom(e, dir) {\r\n    let pos = null\r\n    let { width, height } = this.node.getChildByName('content')\r\n    if (dir === 'left') pos = cc.v3(-width, 0, 0)\r\n    if (dir === 'right') pos = cc.v3(width, 0, 0)\r\n    if (dir === 'top') pos = cc.v3(0, height, 0)\r\n    if (dir === 'bottom') pos = cc.v3(0, -height, 0)\r\n    this.node.active = true\r\n    this.node.getChildByName('content').position = pos\r\n    if (this.isFade) {\r\n      this.node.opacity = 0\r\n      cc.tween(this.node).to(.3, { opacity: 255 }, { easing: 'smooth'}).start()\r\n    }\r\n    cc.tween(this.node.getChildByName('content'))\r\n    .to(.3, { position: this.originPosition }, { easing: 'smooth'})\r\n    .start()\r\n  }\r\n\r\n  /** 从指定方向关闭popup  */\r\n  public hideTo(e, dir) {\r\n    this.hideToDir = dir\r\n    let pos = null, dur = .3\r\n    let { width, height } = this.node.getChildByName('content')\r\n    if (dir === 'left') pos = cc.v3(-width, 0, 0)\r\n    if (dir === 'right') pos = cc.v3(width, 0, 0)\r\n    if (dir === 'top') pos = cc.v3(0, height, 0)\r\n    if (dir === 'bottom') pos = cc.v3(0, -height, 0)\r\n    if (this.isFade) {\r\n      cc.tween(this.node).to(dur, { opacity: 0 }, { easing: 'smooth'}).start()\r\n    }\r\n    cc.tween(this.node.getChildByName('content'))\r\n    .to(dur, { position: pos }, { easing: 'smooth'})\r\n    .call(() => {\r\n      this.node.active = false\r\n      this.node.position = cc.v3(0, 0, 0)\r\n      this.afterHide()\r\n    })\r\n    .start()\r\n  }\r\n\r\n  /** 关闭popup后回调  */\r\n  public afterHide() {}\r\n\r\n  public fadeShow() {\r\n    if (this.node.active) return\r\n    this.node.active = true\r\n    this.node.opacity = 0\r\n    cc.tween(this.node)\r\n      .to(.3, { opacity: 255 }, { easing: 'smooth'})\r\n      .start()\r\n  }\r\n\r\n  public fadeHide() {\r\n    cc.tween(this.node)\r\n      .to(.3, { opacity: 0 }, { easing: 'smooth'})\r\n      .call(() => {\r\n        this.node.active = false\r\n        this.node.opacity = 1\r\n        this.afterHide()\r\n      })\r\n      .start()\r\n  }\r\n\r\n  public show() {\r\n    this.node.active = true\r\n  }\r\n\r\n  public hide() {\r\n    this.node.active = false\r\n  }\r\n}\r\n","const {ccclass, property} = cc._decorator;\nimport GameRun from \"./GameRun\";\nimport BasePopup from \"./components/BasePopup\";\n\n@ccclass\nexport default class ContactCtr extends cc.Component {\n  @property(GameRun)\n  gameRun: GameRun = null\n\n  onBeginContact (contact, selfCollider: cc.PhysicsBoxCollider, otherCollider) {\n    console.log(selfCollider.node.name)\n    if (selfCollider.node.name === 'ground') {\n      this.gameRun.isFloor = true\n    }\n    if (selfCollider.node.name === 'tree') {\n      this.gameRun.isGaming = false\n      this.gameRun.gameOver.getComponent(BasePopup).scaleShow()\n    }\n  }\n}\n","/**\r\n * 事件管理器\r\n * // 注册事件\r\n * EventManager.on('game-start', this.onGameStart, this);\r\n * // 发射事件\r\n * EventManager.emit('game-start', 666);\r\n */\r\nexport default class EventManager {\r\n\r\n  /**\r\n   * 普通事件容器\r\n   */\r\n  private static events: Map<string, Subscription[]> = new Map<string, Subscription[]>();\r\n\r\n  /**\r\n   * 一次性事件容器\r\n   */\r\n  private static onceEvents: Map<string, Subscription[]> = new Map<string, Subscription[]>();\r\n\r\n  /**\r\n   * 注册事件\r\n   * @param name 事件名\r\n   * @param callback 回调\r\n   * @param target 目标\r\n   */\r\n  public static on(name: string, callback: Function, target?: any) {\r\n    const events = this.events;\r\n    if (!events.has(name)) {\r\n      events.set(name, [{ callback, target }]);\r\n      return;\r\n    }\r\n    events.get(name).push({ callback, target });\r\n  }\r\n\r\n  /**\r\n   * 注册事件（一次性）\r\n   * @param name 事件名\r\n   * @param callback 回调\r\n   * @param target 目标\r\n   */\r\n  public static once(name: string, callback: Function, target?: any) {\r\n    const events = this.onceEvents;\r\n    if (!events.has(name)) {\r\n      events.set(name, [{ callback, target }]);\r\n      return;\r\n    }\r\n    events.get(name).push({ callback, target });\r\n  }\r\n\r\n  /**\r\n   * 取消注册事件\r\n   * @param name 事件名\r\n   * @param callback 回调\r\n   * @param target 目标\r\n   */\r\n  public static off(name: string, callback: Function, target?: any) {\r\n    // 普通事件\r\n    const event = this.events.get(name);\r\n    if (event) {\r\n      for (let i = 0, l = event.length; i < l; i++) {\r\n        if (this.compare(event[i], callback, target)) {\r\n          event.splice(i, 1);\r\n          if (event.length === 0) {\r\n            this.events.delete(name);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // 一次性事件\r\n    const onceEvent = this.onceEvents.get(name);\r\n    if (onceEvent) {\r\n      for (let i = 0, l = onceEvent.length; i < l; i++) {\r\n        if (this.compare(onceEvent[i], callback, target)) {\r\n          onceEvent.splice(i, 1);\r\n          if (onceEvent.length === 0) {\r\n            this.onceEvents.delete(name);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 通过事件名发送事件\r\n   * @param name 事件名\r\n   * @param args 参数\r\n   */\r\n  public static emit(name: string, ...args: any[]) {\r\n    // 普通事件\r\n    const event = this.events.get(name);\r\n    if (event) {\r\n      for (let i = 0; i < event.length; i++) {\r\n        const { callback, target } = event[i];\r\n        callback.apply(target, args);\r\n      }\r\n    }\r\n    // 一次性事件\r\n    const onceEvent = this.onceEvents.get(name);\r\n    if (onceEvent) {\r\n      for (let i = 0; i < onceEvent.length; i++) {\r\n        const { callback, target } = onceEvent[i];\r\n        callback.apply(target, args);\r\n      }\r\n      this.onceEvents.delete(name);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移除指定事件\r\n   * @param name 事件名\r\n   */\r\n  public static remove(name: string) {\r\n    // 普通事件\r\n    if (this.events.has(name)) {\r\n      this.events.delete(name);\r\n    }\r\n    // 一次性事件\r\n    if (this.onceEvents.has(name)) {\r\n      this.onceEvents.delete(name);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移除所有事件\r\n   */\r\n  public static removeAll() {\r\n    // 普通事件\r\n    this.events.clear();\r\n    // 一次性事件\r\n    this.onceEvents.clear();\r\n  }\r\n\r\n  /**\r\n   * 对比\r\n   * @param subscription 订阅\r\n   * @param inCallback 回调\r\n   * @param inTarget 目标\r\n   */\r\n  private static compare(subscription: Subscription, inCallback: Function, inTarget: any) {\r\n    const { callback, target } = subscription;\r\n    return target === inTarget && (callback === inCallback || callback.toString() === inCallback.toString());\r\n  }\r\n}\r\n\r\n/** 订阅 */\r\ninterface Subscription {\r\n  /** 回调 */\r\n  callback: Function;\r\n  /** 目标 */\r\n  target: any;\r\n}\r\n","import BasePopup from \"./components/BasePopup\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameRun extends cc.Component {\n  @property(cc.Node)\n  pet: cc.Node = null\n\n  /** gameOver popup  */\n  @property(cc.Node)\n  gameOver: cc.Node = null\n\n  /** guide pointer  */\n  @property(cc.Node)\n  pointer: cc.Node = null\n  \n  @property(cc.Node)\n  trees: cc.Node[] = []\n\n  @property(cc.Node)\n  roads: cc.Node[] = []\n\n  /** 背景速度  */\n  groundSpeed = 200\n\n  /** 游戏距离  */\n  @property(cc.Label)\n  distanceLabel: cc.Label = null\n\n  distanceNum = 0\n\n  /** 弹跳速度  */\n  vSpeed = 700\n\n  /** 是否在地面  */\n  public isFloor: boolean = false\n\n  /** 是否在游戏中  */\n  public isGaming: boolean = true\n\n  /** 宠物的初始位置  */\n  petOriginPostion: cc.Vec3 = null\n\n  protected onLoad(): void {\n    this.pointer.active = true\n    this.petOriginPostion = this.pet.position\n    cc.director.getPhysicsManager().enabled = true\n    cc.director.getCollisionManager().enabled = true\n    this.node.on(cc.Node.EventType.TOUCH_START, this.onClick, this)\n    // this.calcTreePosition()\n    cc.tween(this.pointer)\n    .to(.5, { scale: 1.2 })\n    .to(.5, { scale: 1 })\n    .to(.5, { scale: 1.2 })\n    .to(.5, { scale: 1 })\n    .call(() => { this.pointer.getComponent(BasePopup).scaleHide() })\n    .start()\n  }\n\n  private onClick() {\n    if (this.isFloor && this.isGaming) {\n      this.pet.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, this.vSpeed)\n      this.isFloor = false\n    }\n  }\n\n  protected update(dt: number): void {\n    if (!this.isGaming) return\n    this.groundSpeed = Math.floor(this.distanceNum / 100) * 60 + 200\n    this.vSpeed = 700 - Math.floor(this.distanceNum / 100) * 100\n    if (this.vSpeed <= 500) this.vSpeed = 500\n    this.distanceNum += (dt * this.groundSpeed) / 50\n    this.distanceLabel.string = Math.floor(this.distanceNum) + ' M'\n    this.roads.forEach((road, index) => {\n      road.position = cc.v3(road.position?.x - dt * this.groundSpeed, road.position.y, 0)\n      if (road.position?.x <= -650) {\n        road.position = cc.v3(205, road.position.y, 0)\n        this.trees[index].position = cc.v3(Math.floor(Math.random() * (500 - 300) + 300), this.trees[index].position.y, 0)\n      }\n    })\n    this.trees.forEach((tree) => {\n      tree.position = cc.v3(tree.position?.x - dt * this.groundSpeed, tree.position.y, 0)\n      // if (tree.position.x <= -240) {\n      //   tree.position = cc.v3(Math.floor(Math.random() * (600 - 240) + 240), tree.position.y, 0)\n      // }\n    })\n  }\n\n  public reset() {\n    this.pet.position = this.petOriginPostion\n    this.isFloor = false\n    this.isGaming = true\n    this.gameOver.getComponent(BasePopup).hide()\n    this.distanceNum = 0\n    this.distanceLabel.string = '0 M'\n    this.groundSpeed = 200\n    this.vSpeed = 700\n    this.roads[0].position = cc.v3(-225, this.roads[0].position.y, 0)\n    this.roads[1].position = cc.v3(205, this.roads[0].position.y, 0)\n    this.trees[0].position = cc.v3(120, this.trees[0].position.y, 0)\n    this.trees[1].position = cc.v3(615, this.trees[0].position.y, 0)\n    this.pet.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, 0)\n  }\n}\n","import AudioManager from \"./AudioManager\"\r\n// import SceneNavigator from \"./core/SceneNavigator\"\r\n\r\ntype MsgOptions = {\r\n  title?: string,\r\n  msg: string\r\n  // 其他属性待定\r\n}\r\n\r\ntype Configs = {\r\n  bgmStatus: 0 | 1,\r\n  soundStatus: 0 | 1\r\n}\r\n\r\n/** 游戏全局配置  */\r\nclass global {\r\n  public configs: Configs = {\r\n    bgmStatus: 1,\r\n    soundStatus: 1\r\n  }\r\n  /** \r\n   * @param(options) 消息options\r\n   * @param(callback) msgNode为消息的content副本，以便自定义样式\r\n   */\r\n  public showMsg(options: MsgOptions, callback?: (msgNode: cc.Node) => void): void {}\r\n  /** 全局音频管理  */\r\n  public AudioCtr: AudioManager = null\r\n  /** \r\n   * 场景导航 只有使用Navigator.go()跳转的场景才能使用Navigator.back()，其他同理\r\n   */\r\n  // public Navigator = SceneNavigator\r\n  /** 背景音乐初始化  */\r\n  public BGMInit = (): void => {}\r\n  /** 背景音乐开关  */\r\n  public BGMSwitch = (): void => {}\r\n  /** 音效开关  */\r\n  public SoundSwitch = (): void => {}\r\n}\r\n\r\nconst Global = new global()\r\n\r\nexport default Global\r\n","\nconst {ccclass, property} = cc._decorator;\nimport AudioManager from \"./AudioManager\"\nimport Global from \"./Global\"\n\n@ccclass\nexport default class HallCtr extends cc.Component {\n  @property(cc.Node)\n  audioManager: cc.Node = null\n\n  @property(cc.Node)\n  petNode: cc.Node = null\n\n  protected onLoad(): void {\n    Global.AudioCtr = this.audioManager.getComponent(AudioManager)\n    this.petWalk()\n  }\n\n  public petWalk() {\n    let { x, y } = this.petNode.position\n    let walk = cc.tween(this.petNode)\n    .to(3, { position: cc.v3(x - 80, y, 0) })\n    .to(0, { scaleX: -1 })\n    .to(6, { position: cc.v3(x + 80, y, 0) })\n    .to(0, { scaleX: 1 })\n    .to(3, { position: cc.v3(0, y, 0) })\n    .union()\n    .repeatForever()\n    .start()\n    let walk1 = cc.moveTo(3, cc.v2(-80, y))\n    let walk2 = cc.moveTo(3, cc.v2(80, y))\n    let walk3 = cc.moveTo(3, cc.v2(0, y))\n    // let walkAction = cc.repeatForever(\n    //   cc.sequence(\n    //     cc.moveTo(3, cc.v2(-80, y)),\n    //     cc.scaleTo(.1, -1, 0),\n    //     cc.moveTo(6, cc.v2(80, y)),\n    //     cc.scaleTo(.1, -1, 0),\n    //     cc.moveTo(3, cc.v2(0, y))\n    //   )\n    // )\n    // this.petNode.runAction(walkAction)\n  }\n  \n  public goHall() {\n    cc.director.loadScene('Hall')\n  }\n}\n","import EventManager from \"../../core/EventManager\";\r\n\r\n/** 语言更改事件 */\r\nexport const LANG_CHANGED = 'lang-change';\r\n\r\n/** 语言 */\r\nexport enum Lang {\r\n  /** 中文 */\r\n  Cn = 'cn',\r\n  /** 英语 */\r\n  Eng = 'eng'\r\n}\r\n\r\n/** 默认语言 */\r\nexport enum DefaultLang {\r\n  /** 中文 */\r\n  cn = 1,\r\n  /** 英语 */\r\n  eng,\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 多语言组件基类\r\n * @see LocalizationBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/localization/LocalizationBase.ts\r\n */\r\n@ccclass\r\nexport default class LocalizationBase<T> extends cc.Component {\r\n\r\n  @property({ type: cc.Enum(DefaultLang), tooltip: CC_DEV && '无当前语言资源时使用的默认语言' })\r\n  protected defaultLang: DefaultLang = DefaultLang.cn;\r\n\r\n  private curLang: Lang = Lang.Cn\r\n\r\n  private langChanged: Function = (lang: Lang) => {\r\n    lang = undefined\r\n    lang = this.curLang === Lang.Cn ? Lang.Eng : Lang.Cn\r\n    this.curLang = lang\r\n    this.onLangChanged(lang)\r\n  }\r\n\r\n  protected onLoad() {\r\n    EventManager.on(LANG_CHANGED, this.langChanged, this);\r\n  }\r\n\r\n  protected onDestroy() {\r\n    EventManager.off(LANG_CHANGED, this.langChanged, this);\r\n  }\r\n\r\n  /**\r\n   * 语言更改回调（子类重写该函数以具体实现）\r\n   */\r\n  protected onLangChanged(lang: Lang) {\r\n\r\n  }\r\n\r\n  /**\r\n   * 获取当前语言资源\r\n   */\r\n  protected get(): T {\r\n    if (this[this.curLang]) {\r\n      if (Array.isArray(this[this.curLang]) && this[this.curLang].length === 0) {\r\n        return this[DefaultLang[this.defaultLang]];\r\n      } else {\r\n        return this[this.curLang];\r\n      }\r\n    } else {\r\n      return this[DefaultLang[this.defaultLang]];\r\n    }\r\n  }\r\n}\r\n","import LocalizationBase from \"./LocalizationBase\";\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\nexport default class LocalizationLabelString extends LocalizationBase<string> {\r\n\r\n  @property()\r\n  private cn: string = '';\r\n\r\n  @property()\r\n  private eng: string = '';\r\n\r\n  private label: cc.Label = null;\r\n\r\n  protected onLoad() {\r\n    super.onLoad();\r\n\r\n    this.label = this.node.getComponent(cc.Label);\r\n    if (this.label) this.label.string = this.get();\r\n  }\r\n\r\n  protected onLangChanged() {\r\n    if (this.label) this.label.string = this.get();\r\n  }\r\n\r\n}\r\n","import LocalizationBase from \"./LocalizationBase\";\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\nexport default class LocalizationSpriteFrame extends LocalizationBase<cc.SpriteFrame> {\r\n\r\n  @property(cc.SpriteFrame)\r\n  private cn: cc.SpriteFrame = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  private eng: cc.SpriteFrame = null;\r\n\r\n  private sprite: cc.Sprite = null;\r\n\r\n  protected onLoad() {\r\n    super.onLoad();\r\n\r\n    this.sprite = this.node.getComponent(cc.Sprite);\r\n    if (this.sprite) this.sprite.spriteFrame = this.get();\r\n  }\r\n\r\n  protected onLangChanged() {\r\n    if (this.sprite) this.sprite.spriteFrame = this.get();\r\n  }\r\n}\r\n","\nconst {ccclass, property} = cc._decorator;\nimport AudioManager from \"./AudioManager\"\nimport Global from \"./Global\"\n\n@ccclass\nexport default class StartCtr extends cc.Component {\n  @property(cc.Node)\n  audioManager: cc.Node = null\n\n  protected onLoad(): void {\n    Global.AudioCtr = this.audioManager.getComponent(AudioManager)\n  }\n  \n  public goHall() {\n    cc.director.loadScene('Hall')\n  }\n}\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Switch extends cc.Component {\r\n\r\n  public static instance: Switch = null\r\n\r\n  public status: 0 | 1 = 0\r\n\r\n  protected onLoad(): void {\r\n    Switch.instance = this\r\n    if (this.status) {\r\n      this.node.children[1].position = cc.v3(0, 0, 0)\r\n      this.node.children[1].children[1].getComponent(cc.Label).string = 'ON'\r\n      this.node.children[1].children[0].children[0].color = new cc.Color(0, 175, 237, 255)\r\n    } else {\r\n      this.node.children[1].position = cc.v3(-32, 0, 0)\r\n      this.node.children[1].children[1].getComponent(cc.Label).string = 'OFF'\r\n      this.node.children[1].children[0].children[0].color = new cc.Color(222, 50, 50, 255)\r\n    }\r\n  }\r\n\r\n  public onSwitch(fn: Function) {\r\n    if (this.status) {\r\n      cc.tween(this.node.children[1]).to(.2, { position: cc.v3(-32, 0, 0) }).start()\r\n      this.node.children[1].children[1].getComponent(cc.Label).string = 'OFF'\r\n      this.node.children[1].children[0].children[0].color = new cc.Color(222, 50, 50, 255)\r\n      this.status = 0\r\n    } else {\r\n      cc.tween(this.node.children[1]).to(.2, { position: cc.v3(0, 0, 0) }).start()\r\n      this.node.children[1].children[1].getComponent(cc.Label).string = 'ON'\r\n      this.node.children[1].children[0].children[0].color = new cc.Color(0, 175, 237, 255)\r\n      this.status = 1\r\n    }\r\n    fn(this.status)\r\n  }\r\n}\r\n","cc.macro.ENABLE_WEBGL_ANTIALIAS = true;","/**\r\n* 时间格式化\r\n* @param date Date\r\n* @param fmt 'YYYY-MM-DD hh:mm:ss'\r\n*/\r\nfunction dateFormat(date: Date, fmt = 'YYYY-MM-DD hh:mm:ss') {\r\n  let ret = ''\r\n  const opt = {\r\n    'Y+': date.getFullYear().toString(),        // 年\r\n    'M+': (date.getMonth() + 1).toString(),     // 月\r\n    'D+': date.getDate().toString(),            // 日\r\n    'h+': date.getHours().toString(),           // 时\r\n    'm+': date.getMinutes().toString(),         // 分\r\n    's+': date.getSeconds().toString()          // 秒\r\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n  }\r\n  for (let k in opt) {\r\n    // @ts-ignore\r\n    ret = new RegExp('(' + k + ')').exec(fmt)\r\n    if (ret) {\r\n      fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, '0')))\r\n    }\r\n  }\r\n  return fmt\r\n}\r\n\r\n/**\r\n* 倒计时\r\n* @param target\r\n* -\r\n* - target(Number) > 0, eg: 3376684800000 => 目标时间2077年倒计时\r\n* - target(Number) < 0, eg: -30000 => 30秒倒计时\r\n* - target(object Date), eg: new Date('2077') => 目标时间2077年倒计时\r\n* - target(string Date), eg: '2077-01-01 00:00:00' => 目标时间2077年倒计时\r\n* @param format\r\n* -\r\n* - 'DD天hh小时mm分钟ss秒' => 03天03小时03分钟03秒\r\n* - format中含d,H,m,s等字母，dd ~day~s HH:mm:ss => 03 days 03:03:03\r\n* @param callBack\r\n*  倒计时完成的回调\r\n */\r\nfunction countDown(target: number | Date | string, format?: string, callBack?: Function) {\r\n  const SECOND = 1000\r\n  const MINUTE = 60 * SECOND\r\n  const HOUR = 60 * MINUTE\r\n  const DAY = 24 * HOUR\r\n\r\n  const parseTimeData = (time, fmt) => {\r\n    let opt = {\r\n      'DD': Math.floor(time / DAY).toString(),\r\n      'hh': Math.floor(time % DAY / HOUR).toString(),\r\n      'mm': Math.floor(time % HOUR / MINUTE).toString(),\r\n      'ss': Math.floor(time % MINUTE / SECOND).toString()\r\n    }\r\n    for (let k in opt) {\r\n      fmt = fmt.replace(k, (opt[k].length === 2) ? (opt[k]) : ('0' + opt[k]))\r\n    }\r\n    return fmt\r\n  }\r\n  let countDownStr = '00:00:00'\r\n  let timer = null\r\n  let timeDiff = 0\r\n  let now = +new Date()\r\n  if (typeof target === 'number' && target > 0) { // 目标时间毫秒数\r\n    timeDiff = target - now\r\n  }\r\n  if (typeof target === 'number' && target < 0) { // 倒计时毫秒数\r\n    timeDiff = -target\r\n  }\r\n  if (typeof target === 'object') { // 目标时间date对象\r\n    timeDiff = target.getTime() - now\r\n  }\r\n  if (typeof target === 'string') { // 目标时间字符串\r\n    timeDiff = +new Date(target) - now\r\n  }\r\n  if (timeDiff <= 0) {\r\n    countDownStr = '00:00:00'\r\n  }\r\n  countDownStr = parseTimeData(timeDiff, format)\r\n  timer = setInterval(() => {\r\n    timeDiff -= 1000\r\n    if (timeDiff <= 0) {\r\n      callBack()\r\n      clearInterval(timer)\r\n    }\r\n    countDownStr = parseTimeData(timeDiff, format)\r\n  }, SECOND)\r\n  return countDownStr\r\n}\r\n\r\nexport default {\r\n  dateFormat,\r\n  countDown\r\n}","export default (url) => {\r\n  // let queryStr: string = url || location.search\r\n  // if (!location.search) return {}\r\n  // queryStr = location.search.split('?')[1]\r\n  // let obj: any = {}\r\n  // queryStr.split('&').forEach(item=>{\r\n  //   let [key, val] = item.split('=')\r\n  //   obj[key] = val\r\n  // })\r\n  // return obj\r\n  return {}\r\n}\r\n","import Switch from \"../components/Switch\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class menuPopup extends cc.Component {\n  @property(cc.Node)\n  huntingSwitch: cc.Node = null\n\n  // 弹窗内部的逻辑\n  onLoad() {\n    this.huntingSwitch.getComponent(Switch).status = 1\n  }\n\n  public onHuntingSwitch() {\n    this.huntingSwitch.getComponent(Switch).onSwitch((status) => {\n      console.log(status)\n    })\n  }\n}\n","let urlAlphabet =\r\n  'ModuleSymbhasOwnPr0123456789ABCDEFGHNRVfgctiUvzKqYTJkLxpZXIjQW'\r\n\r\nlet customAlphabet = (alphabet, size) => {\r\n  return () => {\r\n    let id = ''\r\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\r\n    let i = size\r\n    while (i--) {\r\n      // `| 0` is more compact and faster than `Math.floor()`.\r\n      id += alphabet[(Math.random() * alphabet.length) | 0]\r\n    }\r\n    return id\r\n  }\r\n}\r\n\r\nconst nanoid = (size = 21) => {\r\n  let id = ''\r\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\r\n  let i = size\r\n  while (i--) {\r\n    // `| 0` is more compact and faster than `Math.floor()`.\r\n    id += urlAlphabet[(Math.random() * 64) | 0]\r\n  }\r\n  return id\r\n}\r\n\r\nexport default { nanoid }\r\n","/**\r\n * 数字格式化\r\n */\r\nexport default function numberFormat(n: number = 0): string {\r\n  let result = [ ], counter = 0\r\n  let num = n.toString().split('')\r\n  for (var i = num.length - 1; i >= 0; i--) {\r\n      counter++\r\n      result.unshift(num[i])\r\n      if (!(counter % 3) && i != 0) {\r\n          result.unshift(',')\r\n      }\r\n  }\r\n  return result.join('')\r\n}","// @ts-nocheck\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport enum NetWorkType {\r\n  NetWorkType_None = 0,\r\n  NetWorkType_2g,\r\n  NetWorkType_3g,\r\n  NetWorkType_4g,\r\n  NetWorkType_5g,\r\n  NetWorkType_Wife,\r\n  NetWorkType_WWAN,//使用的蜂窝网络  \r\n  NetWorkType_Unknow,\r\n};\r\n\r\n\r\n@ccclass\r\nexport default class ppPlatformMgr {\r\n\r\n  public static removeLaunch() {\r\n    if (cc.sys.isNative) {\r\n      cc.PlatformUtils.getInstance().removeLaunch();\r\n    }\r\n  }\r\n\r\n  public static getMacAddress(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getMacAddress();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getAppVersion(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getAppVersion();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getAppCode(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getAppCode();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getIMEI(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getIMEI();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getIMSI(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getIMSI();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getSimSerialNumber(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getSimSerialNumber();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getSystemId(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getSystemId();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getPhoneModel(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getPhoneModel();\r\n    }\r\n    if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n      return wx.getSystemInfoSync().model;\r\n    }\r\n    else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n      return tt.getSystemInfoSync().model;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getPhoneBrand(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getPhoneBrand();\r\n    }\r\n    if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n      return wx.getSystemInfoSync().brand;\r\n    }\r\n    else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n      return tt.getSystemInfoSync().brand;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getPhoneNum(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getPhoneNum();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static getSystemVersion(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getSystemVersion();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static openBrowser(url: string) {\r\n    if (cc.sys.isNative) {\r\n      cc.PlatformUtils.getInstance().openBrowser(url);\r\n    }\r\n  }\r\n\r\n  public static openApp(pkgName: string): void {\r\n    if (cc.sys.isNative) {\r\n      cc.PlatformUtils.getInstance().openApp(pkgName);\r\n    }\r\n  }\r\n\r\n  public static isAppInstalled(pkgName: string): boolean {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().isAppInstalled(pkgName);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public static setClipboardData(content: string): boolean {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().setClipboardData(content);\r\n    }\r\n    if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n      wx.setClipboardData({\r\n        data: content\r\n      });\r\n    }\r\n    else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n      tt.setClipboardData({\r\n        data: content\r\n      });\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public static getClipboardData(): string {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getClipboardData();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static openSetting() {\r\n    if (cc.sys.isNative) {\r\n      cc.PlatformUtils.getInstance().openSetting();\r\n    }\r\n  }\r\n\r\n  public static shake() {\r\n    if (cc.sys.isNative) {\r\n      cc.PlatformUtils.getInstance().shake();\r\n      return;\r\n    }\r\n\r\n    if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n      wx.vibrateShort({\r\n        type: \"medium\"\r\n      });\r\n    }\r\n    else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n      tt.vibrateShort({\r\n        type: \"medium\"\r\n      });\r\n    }\r\n  }\r\n\r\n  public static getBattery(): number {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getBattery();\r\n    }\r\n    return 100;\r\n  }\r\n\r\n  public static getNetworkType(): number {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getNetworkType();\r\n    }\r\n    return NetWorkType.NetWorkType_Unknow;\r\n  }\r\n\r\n  public static setScreenBright(nBright: number) {\r\n    if (cc.sys.isNative) {\r\n      cc.PlatformUtils.getInstance().setScreenBright(nBright);\r\n      return;\r\n    }\r\n    if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n      wx.setScreenBrightness({\r\n        value: nBright / 100\r\n      });\r\n    }\r\n    else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n      tt.setScreenBrightness({\r\n        value: nBright / 100\r\n      });\r\n    }\r\n  }\r\n\r\n  public static getScreenBright(): number {\r\n    if (cc.sys.isNative) {\r\n      return cc.PlatformUtils.getInstance().getScreenBright();\r\n    }\r\n    return 100;\r\n  }\r\n\r\n  public static setKeepScreenOn(bKeep: boolean) {\r\n    if (cc.sys.isNative) {\r\n      cc.PlatformUtils.getInstance().setKeepScreenOn(bKeep);\r\n      return;\r\n    }\r\n\r\n    if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n      wx.setKeepScreenOn({\r\n        keepScreenOn: bKeep\r\n      });\r\n    }\r\n    else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n      tt.setKeepScreenOn({\r\n        keepScreenOn: bKeep\r\n      });\r\n    }\r\n  }\r\n}\r\n","var nativeFloor = Math.floor,\r\n  nativeRandom = Math.random;\r\n\r\nfunction baseRandom(lower, upper) {\r\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\r\n}\r\n\r\n\r\nexport default function shuffleSelf(array, size = undefined) {\r\n  var index = -1,\r\n    length = array.length,\r\n    lastIndex = length - 1;\r\n\r\n  size = size === undefined ? length : size;\r\n  while (++index < size) {\r\n    var rand = baseRandom(index, lastIndex),\r\n      value = array[rand];\r\n\r\n    array[rand] = array[index];\r\n    array[index] = value;\r\n  }\r\n  array.length = size;\r\n  return array;\r\n}"],"file":"index.js"}